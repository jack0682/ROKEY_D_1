<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <title>물컵 무게 시각화</title>
  <script src="https://unpkg.com/mqtt/dist/mqtt.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #ecf0f1;
      text-align: center;
      padding: 30px;
    }
    h1 {
      color: #2c3e50;
      margin-bottom: 20px;
    }
    .cup-container {
      position: relative;
      width: 150px;
      height: 300px;
      margin: 0 auto 20px auto;
      border: 5px solid #3498db;
      border-radius: 0 0 40px 40px;
      background: #fff;
      overflow: hidden;
    }
    .water {
      position: absolute;
      bottom: 0;
      width: 100%;
      background: linear-gradient(to top, #3498db, #5dade2);
      height: 0%;
      transition: height 0.5s ease;
    }
    .weight-display {
      font-size: 2em;
      color: #34495e;
      margin-bottom: 10px;
    }
    .salt-display, .concentration-display {
      font-size: 1.2em;
      color: #7f8c8d;
      margin-top: 5px;
    }
    .json-display {
      background-color: #ffffff;
      display: inline-block;
      text-align: center;
      margin-top: 20px;
      padding: 15px;
      border-radius: 10px;
      box-shadow: 0 0 5px rgba(0,0,0,0.2);
      font-family: monospace;
      color: #2c3e50;
      white-space: pre-wrap;
    }
  </style>
</head>
<body>

  <h1>물컵 무게 시각화</h1>

  <div class="cup-container">
    <div class="water" id="water"></div>
  </div>

  <div class="weight-display">
    <span id="weight-value">0</span> g / 250 g
  </div>

  <div class="salt-display" id="salt-output"></div>
  <div class="concentration-display" id="concentration-output"></div>

  <div class="json-display" id="json-output">
    데이터 수신 대기중...
  </div>

  <script>
    const MAX_WEIGHT = 250;
    let isNextSugar = false;
    let sugarWeight = 0;
    let totalWeight = 0;

    function updateCup(data) {
      // event 수신 처리
      if (data.event !== undefined) {
        console.log(`event 수신됨: ${data.event}`);
        if (data.event === "1" || data.event === 1) {
          isNextSugar = true;
          console.log("event 1 수신, 설탕 무게 모드 활성화");
        }
        return; // event만 있는 경우 weight 갱신하지 않음
      }

      // 무게 데이터 처리
      let rawWeight = data.weight || 0;
      let weight = Math.max(0, Math.min(rawWeight, MAX_WEIGHT));
      let percent = (weight / MAX_WEIGHT) * 100;

      document.getElementById("water").style.height = percent + "%";
      document.getElementById("weight-value").innerText = weight;

      // 설탕 모드일 때
      if (isNextSugar) {
        sugarWeight = weight;
        isNextSugar = false;
        document.getElementById("salt-output").innerText = `설탕 무게: ${sugarWeight} g`;
        document.getElementById("concentration-output").innerText = "";
        document.getElementById("json-output").innerText = `무게: ${weight} g (설탕)`;
        console.log("설탕 무게 기록됨:", sugarWeight);
        return;
      }

      // 전체 무게 저장
      totalWeight = weight;

      // 농도 계산
      if (sugarWeight > 0 && totalWeight > 0) {
        const concentration = ((sugarWeight / totalWeight) * 100).toFixed(1);
        document.getElementById("salt-output").innerText = `설탕 무게: ${sugarWeight} g`;
        document.getElementById("concentration-output").innerText = `농도: ${concentration} %`;
      } else {
        document.getElementById("salt-output").innerText = "";
        document.getElementById("concentration-output").innerText = "";
      }

      // JSON 출력창 갱신
      document.getElementById("json-output").innerText = `무게: ${weight} g`;
    }

    // MQTT 연결
    const client = mqtt.connect("wss://p021f2cb.ala.asia-southeast1.emqxsl.com:8084/mqtt", {
      username: "Rokey",
      password: "1234567",
      keepalive: 60,
      connectTimeout: 4000
    });

    client.on("connect", () => {
      console.log("MQTT 연결됨");
      client.subscribe("test", (err) => {
        if (err) {
          console.error("구독 실패:", err);
        } else {
          console.log("토픽 구독 완료: test");
        }
      });
    });

    client.on("message", (topic, message) => {
      console.log("받은 토픽:", topic);
      console.log("받은 메시지:", message.toString());
      try {
        const data = JSON.parse(message.toString());

        // event 메시지거나 scale 센서 데이터면 처리
        if (data.event !== undefined || data.sensor_type === "scale") {
          updateCup(data);
        } else {
          console.log("처리할 수 없는 메시지 형식");
        }
      } catch (err) {
        console.error("메시지 파싱 오류:", err);
      }
    });

    client.on("error", (err) => {
      console.error("MQTT 오류:", err);
    });
  </script>

</body>
</html>
